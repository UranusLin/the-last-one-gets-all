/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IGameContract,
  IGameContractInterface,
} from "../../interfaces/IGameContract";

const _abi = [
  {
    inputs: [],
    name: "call",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getGameStatus",
    outputs: [
      {
        internalType: "address",
        name: "_lastCaller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lastCallTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isGameRunning",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IGameContract__factory {
  static readonly abi = _abi;
  static createInterface(): IGameContractInterface {
    return new Interface(_abi) as IGameContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IGameContract {
    return new Contract(address, _abi, runner) as unknown as IGameContract;
  }
}
